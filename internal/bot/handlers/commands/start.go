package commands

import (
	"context"
	"log"

	"github.com/go-telegram/bot"
	"github.com/go-telegram/bot/models"
)

type StartHandler struct {
	BaseHandler
}

func NewStartHandler() *StartHandler {
	return &StartHandler{
		BaseHandler: NewBaseHandler("/start", bot.MatchTypeExact),
	}
}

func (h *StartHandler) Handle(ctx context.Context, b *bot.Bot, update *models.Update) {
	username := "Anonymous"
	if update.Message.From.Username != "" {
		username = "@" + update.Message.From.Username
	}
	
	log.Printf("üìã Start command received from %s", username)
	
	keyboard := &models.InlineKeyboardMarkup{
		InlineKeyboard: [][]models.InlineKeyboardButton{
			{
				{Text: "üß™ –¢–µ—Å—Ç", CallbackData: "test"},
				{Text: "‚ùì –ü–æ–º–æ—â—å", CallbackData: "help"},
			},
			{
				{Text: "üìä –ê–Ω–∞–ª–∏–∑", CallbackData: "analyze"},
			},
		},
	}

	text := `ü§ñ <b>Stool Guru Bot –∑–∞–ø—É—â–µ–Ω</b>

–ü—Ä–∏–≤–µ—Ç! –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º —Å –∞–Ω–∞–ª–∏–∑–æ–º –∑–¥–æ—Ä–æ–≤—å—è.

üì∏ <b>–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞!</b>

–ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ:`

	_, err := b.SendMessage(ctx, &bot.SendMessageParams{
		ChatID:      update.Message.Chat.ID,
		Text:        text,
		ReplyMarkup: keyboard,
		ParseMode:   models.ParseModeHTML,
	})
	if err != nil {
		log.Printf("Error sending start message: %v", err)
		sendErrorMessage(ctx, b, update.Message.Chat.ID, "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
	}
}