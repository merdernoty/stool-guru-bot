package commands

import (
	"context"
	"log"

	"github.com/go-telegram/bot"
	"github.com/go-telegram/bot/models"
)

type StartHandler struct{}

func NewStartHandler() *StartHandler {
	return &StartHandler{}
}

func (h *StartHandler) Handle(ctx context.Context, b *bot.Bot, update *models.Update) {
	log.Printf("üìã Start command received from @%s", update.Message.From.Username)

	keyboard := &models.InlineKeyboardMarkup{
		InlineKeyboard: [][]models.InlineKeyboardButton{
			{
				{Text: "üß™ –¢–µ—Å—Ç", CallbackData: "test"},
				{Text: "‚ùì –ü–æ–º–æ—â—å", CallbackData: "help"},
			},
			{
				{Text: "üìä –ê–Ω–∞–ª–∏–∑", CallbackData: "analyze"},
			},
		},
	}

	text := `ü§ñ Stool Guru Bot –∑–∞–ø—É—â–µ–Ω

–ü—Ä–∏–≤–µ—Ç! –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º —Å –∞–Ω–∞–ª–∏–∑–æ–º –∑–¥–æ—Ä–æ–≤—å—è.

üì∏ **–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞!**

–ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ:`

	_, err := b.SendMessage(ctx, &bot.SendMessageParams{
		ChatID:      update.Message.Chat.ID,
		Text:        text,
		ReplyMarkup: keyboard,
		ParseMode:   models.ParseModeMarkdown,
	})
	if err != nil {
		log.Printf("Error sending start message: %v", err)
	}
}

func (h *StartHandler) GetPattern() string {
	return "/start"
}

func (h *StartHandler) GetMatchType() bot.MatchType {
	return bot.MatchTypeExact
}