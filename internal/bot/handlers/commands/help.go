package commands

import (
	"context"
	"log"

	"github.com/go-telegram/bot"
	"github.com/go-telegram/bot/models"
)

type HelpHandler struct{}

func NewHelpHandler() *HelpHandler {
	return &HelpHandler{}
}

func (h *HelpHandler) Handle(ctx context.Context, b *bot.Bot, update *models.Update) {
	log.Printf("üÜò Help command received from @%s", update.Message.From.Username)

	text := `üÜò **–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:**

üì∏ **–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ** - –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

üìã **–ö–æ–º–∞–Ω–¥—ã:**
/start ‚Ä¢ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help ‚Ä¢ –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞  
/test ‚Ä¢ –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π
/analyze ‚Ä¢ –†—É—á–Ω–æ–π –∞–Ω–∞–ª–∏–∑

üî¨ –ë–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ò–ò –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –¥–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–∞–∫ –æ–ø—ã—Ç–Ω—ã–π –≤—Ä–∞—á!

‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ –∑–∞–º–µ–Ω—è—é—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –≤—Ä–∞—á–∞. –ü—Ä–∏ —Å–µ—Ä—å–µ–∑–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–∞—Ö –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É.`

	_, err := b.SendMessage(ctx, &bot.SendMessageParams{
		ChatID:    update.Message.Chat.ID,
		Text:      text,
		ParseMode: models.ParseModeMarkdown,
	})
	if err != nil {
		log.Printf("Error sending help message: %v", err)
	}
}

func (h *HelpHandler) GetPattern() string {
	return "/help"
}

func (h *HelpHandler) GetMatchType() bot.MatchType {
	return bot.MatchTypeExact
}